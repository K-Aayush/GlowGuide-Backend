// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  DERMATOLOGISTS
  ADMIN
}

enum SkinType {
  DRY
  OILY
  COMBINATION
  NORMAL
  SENSITIVE
}

enum SkinConcern {
  ACNE
  AGING
  PIGMENTATION
  SENSITIVITY
  DRYNESS
  OILINESS
  REDNESS
  UNEVEN_TEXTURE
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String        @db.VarChar(50)
  phone        String        @unique
  image        String?
  role         Role
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  skinProfile  SkinProfile?
  routines     Routine[]
  progressLogs ProgressLog[]
}

model SkinProfile {
  id             String      @id @default(uuid())
  userId         String      @unique
  user           User        @relation(fields: [userId], references: [id])
  skinType       SkinType
  concerns       SkinConcern
  allergies      String?
  goals          String?
  lastAssessment DateTime    @default(now())
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Product {
  id                  String        @id @default(uuid())
  name                String
  brand               String
  description         String        @db.Text
  ingredients         String        @db.Text
  sustainabilityScore Int
  allergens           String?
  imageUrl            String?
  routineSteps        RoutineStep[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Routine {
  id        String        @id @default(uuid())
  userId    String
  user      User          @relation(fields: [userId], references: [id])
  name      String
  type      String
  steps     RoutineStep[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model RoutineStep {
  id        String   @id @default(uuid())
  routineId String
  routine   Routine  @relation(fields: [routineId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  stepOrder Int
  notes     String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProgressLog {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id])
  imageUrl  String?
  notes     String?     @db.Text
  concerns  SkinConcern
  rating    Int // Scale of 1-5
  createdAt DateTime    @default(now())
}
